# -*- coding: utf-8 -*-
"""Borja, Ocampo, Roque - DSP Case Study

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-sP-UGZ8aIdGomA5J3RyZUt9Dh4ZQGWJ
"""

from google.colab import drive
drive.mount('/content/drive')

"""Python Libraries"""

!pip install pydub

import os
from pydub import AudioSegment
import librosa.display
import numpy as np
import IPython.display as ipd

"""##Modifying Alexia's Voice for Anya Character

Convert m4a to wav
"""

def convert_m4a_to_wav(input_folder, output_folder):
    for filename in os.listdir(input_folder):
        if filename.endswith(".m4a"):
            input_filepath = os.path.join(input_folder, filename)


            audio = AudioSegment.from_file(input_filepath, format="m4a")


            output_filename = os.path.splitext(filename)[0] + ".wav"
            output_filepath = os.path.join(output_folder, output_filename)
            audio.export(output_filepath, format="wav")

# convert m4a to wav
anya_input_folder = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Spy Family Dub/Anya - Lex'
anya_output_folder = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Wav Files - Spy Family/Anya '
convert_m4a_to_wav(anya_input_folder, anya_output_folder)

anya_input_directory = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Wav Files - Spy Family/Anya '

for filename in os.listdir(anya_input_directory):
    if filename.endswith('.wav'):
        input_file = os.path.join(anya_input_directory, filename)

        y, sr = librosa.load(input_file, sr=None)
        print("Audio:", filename)
        ipd.display(ipd.Audio(data=y, rate=sr))

"""Pitch Manipulation and Saving the Modified Voice Files into Another Folder"""

def transform_voice(input_file, pitch_shift_factor, output_folder):
    # Load audio file with librosa
    y, sr = librosa.load(input_file, sr=None)

    # Pitch-shift the audio to lower the pitch
    y_transformed = librosa.effects.pitch_shift(y, sr=sr, n_steps=pitch_shift_factor)

    # Extract the filename from the input file path
    filename = os.path.basename(input_file)

    # Create the output file path in the specified output folder
    output_file = os.path.join(output_folder, filename)

    # Save the transformed audio to the output file using soundfile
    sf.write(output_file, y_transformed, sr)

    return output_file

# Directory containing the .wav files
anya_input_directory = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Wav Files - Spy Family/Anya '

# Directory to save the modified voice files
output_folder = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Modified Voices/Anya'

if not os.path.exists(output_folder):
  os.makedirs(output_folder)

pitch_shift_factor = 6.5  # Higher the pitch

# Loop through files in the input directory
for filename in os.listdir(anya_input_directory):
    if filename.endswith('.wav'):
        # Full path to the input file
        input_file = os.path.join(anya_input_directory, filename)

        # Call the function to transform the voice and save it to the output folder
        output_file = transform_voice(input_file, pitch_shift_factor, output_folder)

        # Display and play the transformed audio
        print("Transformed audio saved to:", output_file)
        ipd.display(ipd.Audio(filename=output_file))

"""##Modifying Jane's Voice for Lloyd Character

Convert m4a to wav
"""

# convert m4a to wav
lloyd_input_folder = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Spy Family Dub/Lloyd - Jane'
lloyd_output_folder = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Wav Files - Spy Family/Lloyd'
convert_m4a_to_wav(lloyd_input_folder, lloyd_output_folder)

lloyd_input_directory = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Wav Files - Spy Family/Lloyd'

for filename in os.listdir(lloyd_input_directory):
    if filename.endswith('.wav'):
        input_file = os.path.join(lloyd_input_directory, filename)

        y, sr = librosa.load(input_file, sr=None)
        print("Audio:", filename)
        ipd.display(ipd.Audio(data=y, rate=sr))

"""Pitch Manipulation and Saving the Modified Voice Files into Another Folder"""

def transform_voice(input_file, pitch_shift_factor, output_folder):
    # Load audio file with librosa
    y, sr = librosa.load(input_file, sr=None)

    # Pitch-shift the audio to lower the pitch
    y_transformed = librosa.effects.pitch_shift(y, sr=sr, n_steps=pitch_shift_factor)

    # Extract the filename from the input file path
    filename = os.path.basename(input_file)

    # Create the output file path in the specified output folder
    output_file = os.path.join(output_folder, filename)

    # Save the transformed audio to the output file using soundfile
    sf.write(output_file, y_transformed, sr)

    return output_file

# Directory containing the .wav files
lloyd_input_directory = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Wav Files - Spy Family/Lloyd'

# Directory to save the modified voice files
output_folder = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Modified Voices/Lloyd'

if not os.path.exists(output_folder):
  os.makedirs(output_folder)

# Pitch shift factor for transforming female voice to male voice
pitch_shift_factor = -1.5  # Lowering the pitch

# Loop through files in the input directory
for filename in os.listdir(lloyd_input_directory):
    if filename.endswith('.wav'):
        # Full path to the input file
        input_file = os.path.join(lloyd_input_directory, filename)

        # Call the function to transform the voice and save it to the output folder
        output_file = transform_voice(input_file, pitch_shift_factor, output_folder)

        # Display and play the transformed audio
        print("Transformed audio saved to:", output_file)
        ipd.display(ipd.Audio(filename=output_file))

"""##Modiying Jenelle's Voice for Yor's Character

Convert m4a to wav
"""

# convert m4a to wav
yor_input_folder = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Spy Family Dub/Yor - Jen'
yor_output_folder = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Wav Files - Spy Family/Yor'
convert_m4a_to_wav(yor_input_folder, yor_output_folder)

yor_input_directory = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Wav Files - Spy Family/Yor'

for filename in os.listdir(yor_input_directory):
    if filename.endswith('.wav'):
        input_file = os.path.join(yor_input_directory, filename)

        y, sr = librosa.load(input_file, sr=None)
        print("Audio:", filename)
        ipd.display(ipd.Audio(data=y, rate=sr))

"""Pitch Manipulation and Saving the Modified Voice Files into Another Folder"""

def transform_voice(input_file, pitch_shift_factor, output_folder):
    # Load audio file with librosa
    y, sr = librosa.load(input_file, sr=None)

    # Pitch-shift the audio to lower the pitch
    y_transformed = librosa.effects.pitch_shift(y, sr=sr, n_steps=pitch_shift_factor)

    # Extract the filename from the input file path
    filename = os.path.basename(input_file)

    # Create the output file path in the specified output folder
    output_file = os.path.join(output_folder, filename)

    # Save the transformed audio to the output file using soundfile
    sf.write(output_file, y_transformed, sr)

    return output_file

# Directory containing the .wav files
yor_input_directory = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Wav Files - Spy Family/Yor'

# Directory to save the modified voice files
output_folder = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Modified Voices/Yor'

if not os.path.exists(output_folder):
  os.makedirs(output_folder)

pitch_shift_factor = 1  # Higher the pitch

# Loop through files in the input directory
for filename in os.listdir(yor_input_directory):
    if filename.endswith('.wav'):
        # Full path to the input file
        input_file = os.path.join(yor_input_directory, filename)

        # Call the function to transform the voice and save it to the output folder
        output_file = transform_voice(input_file, pitch_shift_factor, output_folder)

        # Display and play the transformed audio
        print("Transformed audio saved to:", output_file)
        ipd.display(ipd.Audio(filename=output_file))

"""##Modifying Jenelle's Voice for Bond Character

Convert m4a to wav
"""

# convert m4a to wav
bond_input_folder = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Spy Family Dub/Bond - Jen'
bond_output_folder = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Wav Files - Spy Family/Bond'
convert_m4a_to_wav(bond_input_folder, bond_output_folder)

bond_input_directory = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Wav Files - Spy Family/Bond'

for filename in os.listdir(bond_input_directory):
    if filename.endswith('.wav'):
        input_file = os.path.join(bond_input_directory, filename)

        y, sr = librosa.load(input_file, sr=None)
        print("Audio:", filename)
        ipd.display(ipd.Audio(data=y, rate=sr))

"""Pitch Manipulation and Saving the Modified Voice Files into Another Folder"""

def transform_voice(input_file, pitch_shift_factor, output_folder):
    # Load audio file with librosa
    y, sr = librosa.load(input_file, sr=None)

    # Pitch-shift the audio to lower the pitch
    y_transformed = librosa.effects.pitch_shift(y, sr=sr, n_steps=pitch_shift_factor)

    # Extract the filename from the input file path
    filename = os.path.basename(input_file)

    # Create the output file path in the specified output folder
    output_file = os.path.join(output_folder, filename)

    # Save the transformed audio to the output file using soundfile
    sf.write(output_file, y_transformed, sr)

    return output_file

# Directory containing the .wav files
bond_input_directory = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Wav Files - Spy Family/Bond'

# Directory to save the modified voice files
output_folder = '/content/drive/MyDrive/4TH YEAR 1ST SEM/Digital Signal Processing/DSP Midterm Project Videos/Modified Voices/Bond'

if not os.path.exists(output_folder):
  os.makedirs(output_folder)

pitch_shift_factor = -10  # Lower the pitch to fit Bond's Voice

# Loop through files in the input directory
for filename in os.listdir(bond_input_directory):
    if filename.endswith('.wav'):
        # Full path to the input file
        input_file = os.path.join(bond_input_directory, filename)

        # Call the function to transform the voice and save it to the output folder
        output_file = transform_voice(input_file, pitch_shift_factor, output_folder)

        # Display and play the transformed audio
        print("Transformed audio saved to:", output_file)
        ipd.display(ipd.Audio(filename=output_file))